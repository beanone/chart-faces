<?xml version="1.0"?>
<facelet-taglib id="cf"
				xmlns="http://java.sun.com/xml/ns/javaee"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd"
                version="2.0">
	<description>Chart Faces UI Components</description>
    <namespace>http://chartfaces.org/chart</namespace>
    <tag>
    	<description>
    		The bar tag is used to define a bar chart. A bar chart can be laid out as either horizontal or vertical.
    		A bar chart may contain more than one &lt;a href="barset.html" &gt;barset&lt;/a&gt;, each bound to one data collection.
    	</description>
        <tag-name>bar</tag-name>
        <component>
            <display-name></display-name>
            <component-type>org.javaq.chartfaces.chart</component-type>
            <renderer-type>org.javaq.chartfaces.renderer.chart.bar</renderer-type>
            <handler-class>org.javaq.chartfaces.facelets.ChartEventBindingHandler</handler-class>
        </component>
        <attribute>
        	<description>
        		A flag to instruct the render engine to cancel rendering for the current request. The
        		default value is false.
        	</description>
        	<name>cancel</name>
        </attribute>
        <attribute>
        	<description>
        		A flag to instruct the render engine to start a progress rendering session.
        	</description>
        	<name>start</name>
        </attribute>
        <attribute>
        	<description>ID of the chart. Must be unique in the page.</description>
        	<name>id</name>
        </attribute>
        <attribute>
        	<description>Name of the chart.</description>
        	<name>name</name>
        </attribute>
        <attribute>
        	<description>
        		Width of the chart. A length value as defined in SVG specification:
        		&lt;a href="http://www.w3.org/TR/SVG/types.html#DataTypeLength" target="_new"&gt;http://www.w3.org/TR/SVG/types.html#DataTypeLength&lt;/a&gt;
        	</description>
        	<name>width</name>
        </attribute>
        <attribute>
        	<description>
        		Height of the chart. A length value as defined in SVG specification:
        		&lt;a href="http://www.w3.org/TR/SVG/types.html#DataTypeLength" target="_new"&gt;http://www.w3.org/TR/SVG/types.html#DataTypeLength&lt;/a&gt;
        	</description>
        	<name>height</name>
        </attribute>
        <attribute>
        	<description>
        		Padding within the viewBox defined by the width and height. The value uses the unit defined by the viewBox.
        	</description>
        	<name>padding</name>
        </attribute>
        <attribute>
        	<description>
        		Style of the SVG chart.
        	</description>
        	<name>style</name>
        </attribute>
        <attribute>
        	<description>
        		Border style of the SVG chart.
        	</description>
        	<name>borderStyle</name>
        </attribute>
        <attribute>
        	<description>
        		Bottom padding within the viewBox defined by the width and height. The value uses the unit defined by the viewBox.
        	</description>
        	<name>bottomPadding</name>
        </attribute>
        <attribute>
        	<description>
        		Footer of the SVG chart.
        	</description>
        	<name>footer</name>
        </attribute>
        <attribute>
        	<description>
        		Footer style of the SVG chart.
        	</description>
        	<name>footerStyle</name>
        </attribute>
        <attribute>
        	<description>
        		Header of the SVG chart.
        	</description>
        	<name>header</name>
        </attribute>
        <attribute>
        	<description>
        		Header style of the SVG chart.
        	</description>
        	<name>headerStyle</name>
        </attribute>
        <attribute>
        	<description>
        		Left padding within the viewBox defined by the width and height. The value uses the unit defined by the viewBox.
        	</description>
        	<name>leftPadding</name>
        </attribute>
        <attribute>
        	<description>
        		Defines the listener method that process the live event. The method must accept a ChartLiveEvent as the argument.
        		A chart becomes a live chart if this is set.
        	</description>
        	<name>liveListener</name>
        </attribute>
        <attribute>
        	<description>
        		Defines the listener method that process the progressive render event. The method must accept a
        		ChartProgressiveRenderEvent as the argument. A chart becomes a progressive render chart if this is set.
        		This event is ignored if the liveListener is defined.
        	</description>
        	<name>progressiveRenderListener</name>
        </attribute>
        <attribute>
        	<description>Render progress. Used only when progressRenderListener is defined. Valid value is from 0 to 100.</description>
        	<name>progress</name>
        </attribute>
        <attribute>
        	<description>
        		Margin within the viewBox defined by the width and height. The value uses the unit defined by the viewBox.
        	</description>
        	<name>margin</name>
        </attribute>
        <attribute>
        	<description>
        		Orientation of the bar chat. Either "vertical" or "horizontal". Default is "vertical".
        	</description>
        	<name>orientation</name>
        </attribute>
        <attribute>
        	<description>
        		Type of output. Valid values are "svg", "puresvg", "jpg", "png", and "tiff". Default is "svg". If "puresvg", no
        		JSON will be used, as oppose to when "svg" is used, JSON is used to transport data.
        	</description>
        	<name>output</name>
        </attribute>
        <attribute>
        	<description>
        		Time interval (in milliseconds) used to refresh the chart when liveListener is defined.
        	</description>
        	<name>refreshInterval</name>
        </attribute>
        <attribute>
        	<description>
        		Event handler when the chart reset event is triggered. To trigger the event, subscribe to the reset event of the chart
        		when a button is clicked.
        	</description>
        	<name>resetListener</name>
        </attribute>
        <attribute>
        	<description>
        		Right padding within the viewBox defined by the width and height. The padding value uses the unit defined by the viewBox.
        	</description>
        	<name>rightPadding</name>
        </attribute>
        <attribute>
        	<description>
        		Can be bound to a bean that implements org.javaq.chartfaces.IChartSettings interface. This provides the convenience of
        		customizing default chart settings.
        	</description>
        	<name>settings</name>
        </attribute>
        <attribute>
        	<description>
        		Top padding within the viewBox defined by the width and height. The padding value uses the unit defined by the viewBox.
        	</description>
        	<name>topPadding</name>
        </attribute>
    </tag>
    <tag>
    	<description>
    		The scatter tag is used to define a scatter chart. A scatter chart can be used to render 2-D, 3-D even 4-D data values
    		by varying the size, and color of the "dots". A scatter chart may contain more than one
    		&lt;a href="scatterset.html" &gt;scatterset&lt;/a&gt;, each bound to one data collection.
    	</description>
        <tag-name>scatter</tag-name>
        <component>
            <component-type>org.javaq.chartfaces.chart</component-type>
            <renderer-type>org.javaq.chartfaces.renderer.chart.scatter</renderer-type>
            <handler-class>org.javaq.chartfaces.facelets.ChartEventBindingHandler</handler-class>
        </component>
        <attribute>
        	<description>
        		A flag to instruct the render engine to cancel rendering for the current request. The
        		default value is false.
        	</description>
        	<name>cancel</name>
        </attribute>
        <attribute>
        	<description>
        		A flag to instruct the render engine to start a progress rendering session.
        	</description>
        	<name>start</name>
        </attribute>
        <attribute>
        	<description>ID of the chart. Must be unique in the page.</description>
        	<name>id</name>
        </attribute>
        <attribute>
        	<description>Name of the chart.</description>
        	<name>name</name>
        </attribute>
        <attribute>
        	<description>
        		Width of the chart. A length value as defined in SVG specification:
        		&lt;a href="http://www.w3.org/TR/SVG/types.html#DataTypeLength" target="_new"&gt;http://www.w3.org/TR/SVG/types.html#DataTypeLength&lt;/a&gt;
        	</description>
        	<name>width</name>
        </attribute>
        <attribute>
        	<description>
        		Height of the chart. A length value as defined in SVG specification:
        		&lt;a href="http://www.w3.org/TR/SVG/types.html#DataTypeLength" target="_new"&gt;http://www.w3.org/TR/SVG/types.html#DataTypeLength&lt;/a&gt;
        	</description>
        	<name>height</name>
        </attribute>
        <attribute>
        	<description>
        		Padding within the viewBox defined by the width and height. The value uses the unit defined by the viewBox.
        	</description>
        	<name>padding</name>
        </attribute>
        <attribute>
        	<description>
        		Style of the SVG chart.
        	</description>
        	<name>style</name>
        </attribute>
        <attribute>
        	<description>
        		Border style of the SVG chart.
        	</description>
        	<name>borderStyle</name>
        </attribute>
        <attribute>
        	<description>
        		Bottom padding within the viewBox defined by the width and height. The value uses the unit defined by the viewBox.
        	</description>
        	<name>bottomPadding</name>
        </attribute>
        <attribute>
        	<description>
        		Footer of the SVG chart.
        	</description>
        	<name>footer</name>
        </attribute>
        <attribute>
        	<description>
        		Footer style of the SVG chart.
        	</description>
        	<name>footerStyle</name>
        </attribute>
        <attribute>
        	<description>
        		Header of the SVG chart.
        	</description>
        	<name>header</name>
        </attribute>
        <attribute>
        	<description>
        		Header style of the SVG chart.
        	</description>
        	<name>headerStyle</name>
        </attribute>
        <attribute>
        	<description>
        		Left padding within the viewBox defined by the width and height. The value uses the unit defined by the viewBox.
        	</description>
        	<name>leftPadding</name>
        </attribute>
        <attribute>
        	<description>
        		Defines the listener method that process the live event. The method must accept a ChartLiveEvent as the argument.
        		A chart becomes a live chart if this is set.
        	</description>
        	<name>liveListener</name>
        </attribute>
        <attribute>
        	<description>
        		Defines the listener method that process the progressive render event. The method must accept a
        		ChartProgressiveRenderEvent as the argument. A chart becomes a progressive render chart if this is set.
        		This event is ignored if the liveListener is defined.
        	</description>
        	<name>progressiveRenderListener</name>
        </attribute>
        <attribute>
        	<description>Render progress. Used only when progressRenderListener is defined. Valid value is from 0 to 100.</description>
        	<name>progress</name>
        </attribute>
        <attribute>
        	<description>
        		Margin within the viewBox defined by the width and height. The value uses the unit defined by the viewBox.
        	</description>
        	<name>margin</name>
        </attribute>
        <attribute>
        	<description>
        		Orientation of the bar chat. Either "vertical" or "horizontal". Default is "vertical".
        	</description>
        	<name>orientation</name>
        </attribute>
        <attribute>
        	<description>
        		Type of output. Valid values are "svg", "puresvg", "jpg", "png", and "tiff". Default is "svg". If "puresvg", no
        		JSON will be used, as oppose to when "svg" is used, JSON is used to transport data.
        	</description>
        	<name>output</name>
        </attribute>
        <attribute>
        	<description>
        		Time interval (in milliseconds) used to refresh the chart when liveListener is defined.
        	</description>
        	<name>refreshInterval</name>
        </attribute>
        <attribute>
        	<description>
        		Event handler when the chart reset event is triggered. To trigger the event, subscribe to the reset event of the chart
        		when a button is clicked.
        	</description>
        	<name>resetListener</name>
        </attribute>
        <attribute>
        	<description>
        		Right padding within the viewBox defined by the width and height. The padding value uses the unit defined by the viewBox.
        	</description>
        	<name>rightPadding</name>
        </attribute>
        <attribute>
        	<description>
        		Can be bound to a bean that implements org.javaq.chartfaces.IChartSettings interface. This provides the convenience of
        		customizing default chart settings.
        	</description>
        	<name>settings</name>
        </attribute>
        <attribute>
        	<description>
        		Top padding within the viewBox defined by the width and height. The padding value uses the unit defined by the viewBox.
        	</description>
        	<name>topPadding</name>
        </attribute>
        <attribute>
        	<description>
        		Defines the listener method that process the panning event. The method must accept a ChartPanEvent as the argument.
        	</description>
        	<name>panListener</name>
        </attribute>
        <attribute>
        	<description>
        		Defines the listener method that process the zoom event. The method must accept a ChartZoomEvent as the argument. This
        		event is fired when mouse shift drag is used. Normally this is useful only if a scatter chart is used to simulate a
        		raster graphics, which, normally is not a very good idea.
        	</description>
        	<name>zoomListener</name>
        </attribute>
        <attribute>
        	<description>
        		Defines the listener method that process the mouse wheel event. The method must accept a ChartWheelEvent as the argument. This
        		event is fired when mouse wheel is used. Normally this is useful only if a scatter chart is used to simulate a raster graphics,
        		which, normally is not a very good idea.
        	</description>
        	<name>wheelListener</name>
        </attribute>
    </tag>
    <tag>
    	<description>
    		The pie tag is used to define a pie chart.
    	</description>
        <tag-name>pie</tag-name>
        <component>
            <component-type>org.javaq.chartfaces.chart</component-type>
            <renderer-type>org.javaq.chartfaces.renderer.chart.pie</renderer-type>
            <handler-class>org.javaq.chartfaces.facelets.ChartEventBindingHandler</handler-class>
        </component>
        <attribute>
        	<description>
        		A flag to instruct the render engine to cancel rendering for the current request. The
        		default value is false.
        	</description>
        	<name>cancel</name>
        </attribute>
        <attribute>
        	<description>
        		A flag to instruct the render engine to start a progress rendering session.
        	</description>
        	<name>start</name>
        </attribute>
        <attribute>
        	<description>ID of the chart. Must be unique in the page.</description>
        	<name>id</name>
        </attribute>
        <attribute>
        	<description>Name of the chart.</description>
        	<name>name</name>
        </attribute>
        <attribute>
        	<description>
        		Width of the chart. A length value as defined in SVG specification:
        		&lt;a href="http://www.w3.org/TR/SVG/types.html#DataTypeLength" target="_new"&gt;http://www.w3.org/TR/SVG/types.html#DataTypeLength&lt;/a&gt;
        	</description>
        	<name>width</name>
        </attribute>
        <attribute>
        	<description>
        		Height of the chart. A length value as defined in SVG specification:
        		&lt;a href="http://www.w3.org/TR/SVG/types.html#DataTypeLength" target="_new"&gt;http://www.w3.org/TR/SVG/types.html#DataTypeLength&lt;/a&gt;
        	</description>
        	<name>height</name>
        </attribute>
        <attribute>
        	<description>
        		Padding within the viewBox defined by the width and height. The value uses the unit defined by the viewBox.
        	</description>
        	<name>padding</name>
        </attribute>
        <attribute>
        	<description>
        		Style of the SVG chart.
        	</description>
        	<name>style</name>
        </attribute>
        <attribute>
        	<description>
        		Border style of the SVG chart.
        	</description>
        	<name>borderStyle</name>
        </attribute>
        <attribute>
        	<description>
        		Bottom padding within the viewBox defined by the width and height. The value uses the unit defined by the viewBox.
        	</description>
        	<name>bottomPadding</name>
        </attribute>
        <attribute>
        	<description>
        		Footer of the SVG chart.
        	</description>
        	<name>footer</name>
        </attribute>
        <attribute>
        	<description>
        		Footer style of the SVG chart.
        	</description>
        	<name>footerStyle</name>
        </attribute>
        <attribute>
        	<description>
        		Header of the SVG chart.
        	</description>
        	<name>header</name>
        </attribute>
        <attribute>
        	<description>
        		Header style of the SVG chart.
        	</description>
        	<name>headerStyle</name>
        </attribute>
        <attribute>
        	<description>
        		Left padding within the viewBox defined by the width and height. The value uses the unit defined by the viewBox.
        	</description>
        	<name>leftPadding</name>
        </attribute>
        <attribute>
        	<description>
        		Defines the listener method that process the live event. The method must accept a ChartLiveEvent as the argument.
        		A chart becomes a live chart if this is set.
        	</description>
        	<name>liveListener</name>
        </attribute>
        <attribute>
        	<description>
        		Defines the listener method that process the progressive render event. The method must accept a
        		ChartProgressiveRenderEvent as the argument. A chart becomes a progressive render chart if this is set.
        		This event is ignored if the liveListener is defined.
        	</description>
        	<name>progressiveRenderListener</name>
        </attribute>
        <attribute>
        	<description>Render progress. Used only when progressRenderListener is defined. Valid value is from 0 to 100.</description>
        	<name>progress</name>
        </attribute>
        <attribute>
        	<description>
        		Margin within the viewBox defined by the width and height. The value uses the unit defined by the viewBox.
        	</description>
        	<name>margin</name>
        </attribute>
        <attribute>
        	<description>
        		Orientation of the bar chat. Either "vertical" or "horizontal". Default is "vertical".
        	</description>
        	<name>orientation</name>
        </attribute>
        <attribute>
        	<description>
        		Type of output. Valid values are "svg", "puresvg", "jpg", "png", and "tiff". Default is "svg". If "puresvg", no
        		JSON will be used, as oppose to when "svg" is used, JSON is used to transport data.
        	</description>
        	<name>output</name>
        </attribute>
        <attribute>
        	<description>
        		Time interval (in milliseconds) used to refresh the chart when liveListener is defined.
        	</description>
        	<name>refreshInterval</name>
        </attribute>
        <attribute>
        	<description>
        		Event handler when the chart reset event is triggered. To trigger the event, subscribe to the reset event of the chart
        		when a button is clicked.
        	</description>
        	<name>resetListener</name>
        </attribute>
        <attribute>
        	<description>
        		Right padding within the viewBox defined by the width and height. The padding value uses the unit defined by the viewBox.
        	</description>
        	<name>rightPadding</name>
        </attribute>
        <attribute>
        	<description>
        		Can be bound to a bean that implements org.javaq.chartfaces.IChartSettings interface. This provides the convenience of
        		customizing default chart settings.
        	</description>
        	<name>settings</name>
        </attribute>
        <attribute>
        	<description>
        		Top padding within the viewBox defined by the width and height. The padding value uses the unit defined by the viewBox.
        	</description>
        	<name>topPadding</name>
        </attribute>
    </tag>

    <!-- tag that does not have renderer -->
    <tag>
    	<description>
    		The xaxis tag is used to define a x-axis. A chart can have more than one x-axis positioned at different positions.
    	</description>
    	<tag-name>xaxis</tag-name>
    	<component>
    		<component-type>org.javaq.chartfaces.chart.part.axis.x</component-type>
    	</component>
        <attribute>
        	<description>ID of the axis. Must be unique in the page.</description>
        	<name>id</name>
        </attribute>
    	<attribute>
    		<description>
    			The position of the x-axis. Valid values are "top", "middle", "bottom". Default is "bottom".
    		</description>
    		<name>position</name>
    	</attribute>
        <attribute>
        	<description>Caption of the axis.</description>
        	<name>caption</name>
        </attribute>
        <attribute>
        	<description>Style of the caption of the axis.</description>
        	<name>captionStyle</name>
        </attribute>
        <attribute>
        	<description>
        		Density of the grid-lines of the axis. The value equals the number of ticks in between two grid lines, that is,
        		if this value is 0, there will be exactly one grid line on each tick. Default value is 0.
        	</description>
        	<name>gridLineDensity</name>
        </attribute>
        <attribute>
        	<description>The style of the grid lines.</description>
        	<name>gridLineStyle</name>
        </attribute>
        <attribute>
        	<description>Height of the box that enclosing the axis.</description>
        	<name>height</name>
        </attribute>
        <attribute>
        	<description>Labels of the axis ticks.</description>
        	<name>label</name>
        </attribute>
        <attribute>
        	<description>Labels of the axis can be angled and this attribute defines the angle of the labels in degrees.</description>
        	<name>labelAngle</name>
        </attribute>
        <attribute>
        	<description>The style of the labels.</description>
        	<name>labelStyle</name>
        </attribute>
        <attribute>
        	<description>The style of the axis line.</description>
        	<name>lineStyle</name>
        </attribute>
        <attribute>
        	<description>
        		The direction of the ticks. the tick direction. The tick direction can be top or bottom, or middle.
        	</description>
        	<name>tickDirection</name>
        </attribute>
        <attribute>
        	<description>
        		The height of the tick in the chart viewBox coordinator.
        	</description>
        	<name>tickHeight</name>
        </attribute>
        <attribute>
        	<description>The style of the ticks.</description>
        	<name>tickStyle</name>
        </attribute>
        <attribute>
        	<description>The mouse over hint text of the axis.</description>
        	<name>title</name>
        </attribute>
        <attribute>
        	<description>
        		The max value of the axis. This is the user coordinate max value (as opposed to the viewBox coordinate).
        	</description>
        	<name>max</name>
        </attribute>
        <attribute>
        	<description>
        		The min value of the axis. This is the user coordinate min value (as opposed to the viewBox coordinate).
        	</description>
        	<name>min</name>
        </attribute>
        <attribute>
        	<description>
        		A scaler is used to scale a an axis to create, e.g., a log scale.
        	</description>
        	<name>scaler</name>
        </attribute>
    	<attribute>
    		<description>The axis tick values.</description>
    		<name>value</name>
    	</attribute>
    </tag>
    <tag>
    	<description>
    		The yaxis tag is used to define a y-axis. A chart can have more than one y-axis positioned at different positions.
    	</description>
    	<tag-name>yaxis</tag-name>
    	<component>
    		<component-type>org.javaq.chartfaces.chart.part.axis.y</component-type>
    	</component>
        <attribute>
        	<description>ID of the axis. Must be unique in the page.</description>
        	<name>id</name>
        </attribute>
    	<attribute>
    		<description>
    			The position of the y-axis. Valid values are "left", "middle", "right". Default is "left".
    		</description>
    		<name>position</name>
    	</attribute>
        <attribute>
        	<description>Caption of the axis.</description>
        	<name>caption</name>
        </attribute>
        <attribute>
        	<description>Style of the caption of the axis.</description>
        	<name>captionStyle</name>
        </attribute>
        <attribute>
        	<description>
        		Density of the grid-lines of the axis. The value equals the number of ticks in between two grid lines, that is,
        		if this value is 0, there will be exactly one grid line on each tick. Default value is 0.
        	</description>
        	<name>gridLineDensity</name>
        </attribute>
        <attribute>
        	<description>The style of the grid lines.</description>
        	<name>gridLineStyle</name>
        </attribute>
        <attribute>
        	<description>Labels of the axis ticks.</description>
        	<name>label</name>
        </attribute>
        <attribute>
        	<description>Labels of the axis can be angled and this attribute defines the angle of the labels in degrees.</description>
        	<name>labelAngle</name>
        </attribute>
        <attribute>
        	<description>The style of the labels.</description>
        	<name>labelStyle</name>
        </attribute>
        <attribute>
        	<description>The style of the axis line.</description>
        	<name>lineStyle</name>
        </attribute>
        <attribute>
        	<description>
        		The direction of the ticks. the tick direction. The tick direction can be left, right, or middle.
        	</description>
        	<name>tickDirection</name>
        </attribute>
        <attribute>
        	<description>
        		The height of the tick in the chart viewBox coordinator.
        	</description>
        	<name>tickHeight</name>
        </attribute>
        <attribute>
        	<description>The style of the ticks.</description>
        	<name>tickStyle</name>
        </attribute>
        <attribute>
        	<description>The mouse over hint text of the axis.</description>
        	<name>title</name>
        </attribute>
        <attribute>
        	<description>
        		The max value of the axis. This is the user coordinate max value (as opposed to the viewBox coordinate).
        	</description>
        	<name>max</name>
        </attribute>
        <attribute>
        	<description>
        		The min value of the axis. This is the user coordinate min value (as opposed to the viewBox coordinate).
        	</description>
        	<name>min</name>
        </attribute>
        <attribute>
        	<description>
        		A scaler is used to scale a an axis to create, e.g., a log scale.
        	</description>
        	<name>scaler</name>
        </attribute>
    	<attribute>
    		<description>The axis tick values.</description>
    		<name>value</name>
    	</attribute>
        <attribute>
        	<description>Width of the box that enclosing the axis.</description>
        	<name>width</name>
        </attribute>
    </tag>
    <tag>
    	<description>
    		The angular-axis tag is used to define an angular-axis. A chart can have more than one
    		angular-axis positioned at different positions.
    	</description>
    	<tag-name>angular-axis</tag-name>
    	<component>
    		<component-type>org.javaq.chartfaces.chart.part.axis.angular</component-type>
    	</component>
        <attribute>
        	<description>ID of the axis. Must be unique in the page.</description>
        	<name>id</name>
        </attribute>
    	<attribute>
    		<description>The radius of the angular axis line. The unit is in the user coordinate.</description>
    		<name>radius</name>
    	</attribute>
        <attribute>
        	<description>Caption of the axis.</description>
        	<name>caption</name>
        </attribute>
        <attribute>
        	<description>Style of the caption of the axis.</description>
        	<name>captionStyle</name>
        </attribute>
        <attribute>
        	<description>
        		Density of the grid-lines of the axis. The value equals the number of ticks in between two grid lines, that is,
        		if this value is 0, there will be exactly one grid line on each tick. Default value is 0.
        	</description>
        	<name>gridLineDensity</name>
        </attribute>
        <attribute>
        	<description>The style of the grid lines.</description>
        	<name>gridLineStyle</name>
        </attribute>
        <attribute>
        	<description>Labels of the axis ticks.</description>
        	<name>label</name>
        </attribute>
        <attribute>
        	<description>Labels of the axis can be angled and this attribute defines the angle of the labels in degrees.</description>
        	<name>labelAngle</name>
        </attribute>
        <attribute>
        	<description>The style of the labels.</description>
        	<name>labelStyle</name>
        </attribute>
        <attribute>
        	<description>The style of the axis line.</description>
        	<name>lineStyle</name>
        </attribute>
        <attribute>
        	<description>
        		The direction of the ticks. the tick direction. The tick direction can be inward or outward, or middle.
        	</description>
        	<name>tickDirection</name>
        </attribute>
        <attribute>
        	<description>
        		The height of the tick in the chart viewBox coordinator.
        	</description>
        	<name>tickHeight</name>
        </attribute>
        <attribute>
        	<description>The style of the ticks.</description>
        	<name>tickStyle</name>
        </attribute>
        <attribute>
        	<description>The mouse over hint text of the axis.</description>
        	<name>title</name>
        </attribute>
    	<attribute>
    		<description>The axis tick values.</description>
    		<name>value</name>
    	</attribute>
    </tag>
    <tag>
    	<description>
    		The radial tag is used to define a radial-axis. A chart can have more than one radial-axis positioned at
    		different angles.
    	</description>
    	<tag-name>radial-axis</tag-name>
    	<component>
    		<component-type>org.javaq.chartfaces.chart.part.axis.radial</component-type>
    	</component>
        <attribute>
        	<description>ID of the axis. Must be unique in the page.</description>
        	<name>id</name>
        </attribute>
    	<attribute>
    		<description>The angle of the radial axis line. The unit is in degrees.</description>
    		<name>angle</name>
    	</attribute>
        <attribute>
        	<description>Caption of the axis.</description>
        	<name>caption</name>
        </attribute>
        <attribute>
        	<description>Style of the caption of the axis.</description>
        	<name>captionStyle</name>
        </attribute>
        <attribute>
        	<description>
        		Density of the grid-lines of the axis. The value equals the number of ticks in between two grid lines, that is,
        		if this value is 0, there will be exactly one grid line on each tick. Default value is 0.
        	</description>
        	<name>gridLineDensity</name>
        </attribute>
        <attribute>
        	<description>The style of the grid lines.</description>
        	<name>gridLineStyle</name>
        </attribute>
        <attribute>
        	<description>Labels of the axis ticks.</description>
        	<name>label</name>
        </attribute>
        <attribute>
        	<description>Labels of the axis can be angled and this attribute defines the angle of the labels in degrees.</description>
        	<name>labelAngle</name>
        </attribute>
        <attribute>
        	<description>The style of the labels.</description>
        	<name>labelStyle</name>
        </attribute>
        <attribute>
        	<description>The style of the axis line.</description>
        	<name>lineStyle</name>
        </attribute>
        <attribute>
        	<description>
        		The direction of the ticks. the tick direction. The tick direction can be clockwise or anti-clockwise, or middle.
        	</description>
        	<name>tickDirection</name>
        </attribute>
        <attribute>
        	<description>
        		The height of the tick in the chart viewBox coordinator.
        	</description>
        	<name>tickHeight</name>
        </attribute>
        <attribute>
        	<description>The style of the ticks.</description>
        	<name>tickStyle</name>
        </attribute>
        <attribute>
        	<description>The mouse over hint text of the axis.</description>
        	<name>title</name>
        </attribute>
        <attribute>
        	<description>
        		The max value of the axis. This is the real coordinate max value (as opposed to the viewBox coordinate).
        	</description>
        	<name>max</name>
        </attribute>
        <attribute>
        	<description>
        		The min value of the axis. This is the real coordinate min value (as opposed to the viewBox coordinate).
        	</description>
        	<name>min</name>
        </attribute>
        <attribute>
        	<description>
        		A scaler is used to scale a an axis to create, e.g., a log scale.
        	</description>
        	<name>scaler</name>
        </attribute>
    	<attribute>
    		<description>The axis tick values.</description>
    		<name>value</name>
    	</attribute>
    </tag>
    <tag>
    	<description>
    		The barset tag is used to define a bar data set. A chart can have more than one bar data set.
    	</description>
    	<tag-name>barset</tag-name>
    	<component>
    		<component-type>org.javaq.chartfaces.chart.part.component</component-type>
    		<renderer-type>barset</renderer-type>
    	</component>
        <attribute>
        	<description>ID of the barset. Must be unique in the page.</description>
        	<name>id</name>
        </attribute>
        <attribute>
        	<description>ID values of the axes the barset is associated with. ID values are separated by comma.</description>
        	<name>axesIds</name>
        </attribute>
        <attribute>
        	<description>Label of the legend for this barset.</description>
        	<name>legendLabel</name>
        </attribute>
        <attribute>
        	<description>
        		A flag indicates whether tooltip text should be used for the data points. The default value is true.
        	</description>
        	<name>showTooltips</name>
        </attribute>
    	<attribute>
    		<description>
    			The data values. May be an org.javaq.chartfaces.api.IChartingData, an array, an java.util.Iterable, or
    			a java.util.Map object.
    		</description>
    		<name>value</name>
    	</attribute>
    </tag>
    <tag>
    	<description>
    		The scatterset tag is used to define a scatter chart data set. A chart can have more than one scatter data set.
    	</description>
    	<tag-name>scatterset</tag-name>
    	<component>
    		<component-type>org.javaq.chartfaces.chart.part.scatterset</component-type>
    		<renderer-type>scatterset</renderer-type>
    	</component>
        <attribute>
        	<description>ID values of the axes the scatterset is associated with. ID values are separated by comma.</description>
        	<name>axesIds</name>
        </attribute>
        <attribute>
        	<description>Label of the legend for this scatterset.</description>
        	<name>legendLabel</name>
        </attribute>
        <attribute>
        	<description>A flag indicates whether tooltip text should be used for the data points.</description>
        	<name>showTooltips</name>
        </attribute>
        <attribute>
        	<description>The filling property for the dot symbols of the scatter chart.</description>
        	<name>fill</name>
        </attribute>
        <attribute>
        	<description>Style of the lines connecting the dot symbols if "showLine" is true.</description>
        	<name>lineStyle</name>
        </attribute>
        <attribute>
        	<description>The opacity of the fill of the symbols.</description>
        	<name>opacity</name>
        </attribute>
        <attribute>
        	<description>A flag indicates whether show lines in between the symbols.</description>
        	<name>showLine</name>
        </attribute>
        <attribute>
        	<description>The color of the strokes if "showLine" is true.</description>
        	<name>strokeColor</name>
        </attribute>
        <attribute>
        	<description>The width of the strokes if "showLine" is true.</description>
        	<name>strokeWidth</name>
        </attribute>
        <attribute>
        	<description>The name of the symbol. Valid values are "triangle", "circle", and "square".</description>
        	<name>symbol</name>
        </attribute>
        <attribute>
        	<description>The size of the symbol in the chart viewBox coordinates.</description>
        	<name>symbolSize</name>
        </attribute>
    	<attribute>
    		<description>
    			The data values. May be an org.javaq.chartfaces.api.IChartingData, an array, an java.util.Iterable, or
    			a java.util.Map object.
    		</description>
    		<name>value</name>
    	</attribute>
    </tag>
    <tag>
    	<description>
    		The scatter3vset tag is used to define a scatter3v chart data set. A chart can have more than one scatter3v data set.
    	</description>
    	<tag-name>scatter3vset</tag-name>
    	<component>
    		<component-type>org.javaq.chartfaces.chart.part.scatter3vset</component-type>
    		<renderer-type>scatter3vset</renderer-type>
    	</component>
        <attribute>
        	<description>ID values of the axes the scatter3vset is associated with. ID values are separated by comma.</description>
        	<name>axesIds</name>
        </attribute>
        <attribute>
        	<description>Label of the legend for this scatter3vset.</description>
        	<name>legendLabel</name>
        </attribute>
        <attribute>
        	<description>A flag indicates whether tooltip text should be used for the data points.</description>
        	<name>showTooltips</name>
        </attribute>
        <attribute>
        	<description>The filling property for the dot symbols of the scatter chart.</description>
        	<name>fill</name>
        </attribute>
        <attribute>
        	<description>Style of the lines connecting the dot symbols if "showLine" is true.</description>
        	<name>lineStyle</name>
        </attribute>
        <attribute>
        	<description>The opacity of the fill of the symbols.</description>
        	<name>opacity</name>
        </attribute>
        <attribute>
        	<description>A flag indicates whether show lines in between the symbols.</description>
        	<name>showLine</name>
        </attribute>
        <attribute>
        	<description>The color of the strokes if "showLine" is true.</description>
        	<name>strokeColor</name>
        </attribute>
        <attribute>
        	<description>The width of the strokes if "showLine" is true.</description>
        	<name>strokeWidth</name>
        </attribute>
        <attribute>
        	<description>The name of the symbol. Valid values are "triangle", "circle", and "square".</description>
        	<name>symbol</name>
        </attribute>
        <attribute>
        	<description>The size of the symbol in the chart viewBox coordinates.</description>
        	<name>symbolSize</name>
        </attribute>
        <attribute>
        	<description>Scales of the symbols, just like the scale for an axis.</description>
        	<name>symbolScale</name>
        </attribute>
        <attribute>
        	<description>
        		The symbol properties for each data point.
        	</description>
        	<name>propertyMap</name>
        </attribute>
    	<attribute>
    		<description>
    			The data values. May be an org.javaq.chartfaces.api.IChartingData, an array, an java.util.Iterable, or
    			a java.util.Map object.
    		</description>
    		<name>value</name>
    	</attribute>
    </tag>
    <tag>
    	<description>
    		The legend tag is used to define a legend.
    	</description>
    	<tag-name>legend</tag-name>
    	<component>
    		<component-type>org.javaq.chartfaces.chart.part.legend</component-type>
    	</component>
    	<attribute>
    		<description>The ID of the data set (scatterset, scatter3vset, barset, etc.) that this legend is for.</description>
    		<name>for</name>
    		<required>true</required>
    	</attribute>
    	<attribute>
    		<description>The layout of the legend (vertical or horizontal?).</description>
    		<name>layout</name>
    	</attribute>
    	<attribute>
    		<description>The style of the legend.</description>
    		<name>style</name>
    	</attribute>
    	<attribute>
    		<description>
    			The position of the legend. Valid values are one of the enum values defined by org.javaq.chartfaces.constants.EnumPosition.
    		</description>
    		<name>position</name>
    	</attribute>
        <attribute>
        	<description>The x coordinate of the legend in the chart viewBox coordinates.</description>
        	<name>x</name>
        </attribute>
        <attribute>
        	<description>The y coordinate of the legend in the chart viewBox coordinates.</description>
        	<name>y</name>
        </attribute>
        <attribute>
        	<description>
        		The x coordinate of anchor point of the Legend. For legend positioned top, or bottom, this values is ignored.
        		If the legend is positioned left, topLeft, or bottomLeft, this value is the distance from the left of the legend

        	</description>
        	<name>anchorX</name>
        </attribute>
        <attribute>
        	<description>
        		The y coordinate of the anchor point of the Legend. For legend positioned left, or right, this values is ignored.
        	</description>
        	<name>anchorY</name>
        </attribute>
    	<attribute>
        	<description>The data value represented by the legend.</description>
    		<name>value</name>
    	</attribute>
    </tag>
    <tag>
    	<description>
    		The header of the chart.
    	</description>
    	<tag-name>header</tag-name>
    	<component>
    		<component-type>org.javaq.chartfaces.chart.part.header</component-type>
    	</component>
        <attribute>
        	<description>The height of the header.</description>
        	<name>height</name>
        </attribute>
    	<attribute>
    		<description>The style of the header.</description>
    		<name>style</name>
    	</attribute>
    	<attribute>
    		<description>The header text to display.</description>
    		<name>value</name>
    	</attribute>
    </tag>
    <tag>
    	<description>
    		The footer of the chart.
    	</description>
    	<tag-name>footer</tag-name>
    	<component>
    		<component-type>org.javaq.chartfaces.chart.part.footer</component-type>
    	</component>
        <attribute>
        	<description>The height of the footer.</description>
        	<name>height</name>
        </attribute>
    	<attribute>
    		<description>The style of the footer.</description>
    		<name>style</name>
    	</attribute>
    	<attribute>
    		<description>The footer text to display.</description>
    		<name>value</name>
    	</attribute>
    </tag>
</facelet-taglib>